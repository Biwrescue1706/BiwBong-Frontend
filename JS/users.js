import { formatDateThai, loadNavbar } from './utils.js';

document.addEventListener('DOMContentLoaded', async () => {
  await loadNavbar();

  try {
    const res = await fetch(`${backendURL}/users/getall`, {
      credentials: 'include',
    });

    if (!res.ok) throw new Error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');

    const users = await res.json();
    const tbody = document.getElementById('usersTableBody');
    tbody.innerHTML = '';

    users.forEach((e, index) => {
      tbody.innerHTML += `
        <tr>
          <td data-label="‡∏•‡∏≥‡∏î‡∏±‡∏ö">${index + 1}</td>
          <td data-label="UserId">${e.UserId}</td>
          <td data-label="Username">${e.username || '-'}</td>
          <td data-label="‡∏ä‡∏∑‡πà‡∏≠">${e.name || '-'}</td>
          <td data-label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ">${e.Created_At ? formatDateThai(e.Created_At) : '-'}</td>
          <td data-label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç">${e.Update_At ? formatDateThai(e.Update_At) : '-'}</td>
          <td data-label="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£">
            <button onclick="editUser('${e.UserId}')">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
            <button onclick="deleteUser('${e.UserId}')">‡∏•‡∏ö</button>
          </td>
        </tr>
      `;
    });

  } catch (err) {
    console.error(err);
    Swal.fire({
      icon: 'error',
      title: '‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß',
      text: err.message,
    });
  }
});

// ======= ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ =======
window.editUser = async (userId) => {
  try {
    const res = await fetch(`${backendURL}/users/getall/${userId}`, {
      method: 'GET',
      credentials: 'include',
    });

    if (!res.ok) throw new Error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    const user = await res.json();

    const { value: formValues } = await Swal.fire({
      title: `‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${userId}`,
      html: `
        <input id="swal-username" class="swal2-input" placeholder="Username" value="${user.username || ''}">
        <input id="swal-name" class="swal2-input" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" value="${user.name || ''}">
      `,
      focusConfirm: false,
      showCancelButton: true,
      confirmButtonText: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å',
      cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
      preConfirm: () => {
        return {
          username: document.getElementById('swal-username').value.trim(),
          name: document.getElementById('swal-name').value.trim()
        };
      }
    });

    if (formValues) {
      const updateRes = await fetch(`${backendURL}/users/getall/${userId}`, {
        method: 'PUT',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formValues),
      });

      if (!updateRes.ok) throw new Error('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');

      Swal.fire('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
      location.reload();
    }
  } catch (err) {
    console.error(err);
    Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', err.message, 'error');
  }
};

// ======= üóëÔ∏è ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ =======
window.deleteUser = async (userId) => {
  const confirm = await Swal.fire({
    title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
    text: `‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${userId} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`,
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: '‡∏•‡∏ö',
    cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
  });

  if (confirm.isConfirmed) {
    try {
      const res = await fetch(`${backendURL}/users/getall/${userId}`, {
        method: 'DELETE',
        credentials: 'include',
      });

      if (!res.ok) throw new Error('‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

      Swal.fire('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
      location.reload();
    } catch (err) {
      console.error(err);
      Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', err.message, 'error');
    }
  }
};